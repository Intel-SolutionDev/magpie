diff -pruN hbase-1.4.9-alternate-ssh/bin/hbase-config.sh hbase-1.4.9/bin/hbase-config.sh
--- hbase-1.4.9-alternate-ssh/bin/hbase-config.sh	2018-12-05 10:53:40.000000000 -0800
+++ hbase-1.4.9/bin/hbase-config.sh	2019-01-24 17:56:51.825221000 -0800
@@ -46,6 +46,8 @@ if [ -z "$HBASE_HOME" ]; then
   export HBASE_HOME=`dirname "$this"`/..
 fi
 
+myhostname=`hostname`
+
 #check to see if the conf dir or hbase home are given as an optional arguments
 while [ $# -gt 1 ]
 do
@@ -53,7 +55,20 @@ do
   then
     shift
     confdir=$1
+    if echo $confdir | grep -q MAGPIEHOSTNAMESUBSTITUTION
+    then
+       orig_confdir="$1"
+       confdir=$(echo "$confdir" | sed "s/MAGPIEHOSTNAMESUBSTITUTION/$myhostname/g")
+    fi
+    if [ ! -d "$confdir" ]; then
+      echo "Error: Cannot find configuration directory: $confdir"
+      exit
+    fi
     shift
+    if [ "${orig_confdir}X" != "X" ]
+    then
+      orig_hbaseconfdir=$orig_confdir
+    fi 
     HBASE_CONF_DIR=$confdir
   elif [ "--hosts" = "$1" ]
   then
@@ -92,6 +107,25 @@ done
  
 # Allow alternate hbase conf dir location.
 HBASE_CONF_DIR="${HBASE_CONF_DIR:-$HBASE_HOME/conf}"
+
+if echo $HBASE_CONF_DIR | grep -q MAGPIEHOSTNAMESUBSTITUTION
+then
+  orig_hbaseconfdir=$HBASE_CONF_DIR
+  export HBASE_CONF_DIR=$(echo "$HBASE_CONF_DIR" | sed "s/MAGPIEHOSTNAMESUBSTITUTION/$myhostname/g")
+fi
+
+if echo $HBASE_LOG_DIR | grep -q MAGPIEHOSTNAMESUBSTITUTION
+then
+  orig_hbaselogdir=$HBASE_LOG_DIR
+  export HBASE_LOG_DIR=$(echo "$HBASE_LOG_DIR" | sed "s/MAGPIEHOSTNAMESUBSTITUTION/$myhostname/g")
+fi
+
+if echo $HBASE_PID_DIR | grep -q MAGPIEHOSTNAMESUBSTITUTION
+then
+  orig_hbasepiddir=$HBASE_PID_DIR
+  export HBASE_PID_DIR=$(echo "$HBASE_PID_DIR" | sed "s/MAGPIEHOSTNAMESUBSTITUTION/$myhostname/g")
+fi
+
 # List of hbase regions servers.
 HBASE_REGIONSERVERS="${HBASE_REGIONSERVERS:-$HBASE_CONF_DIR/regionservers}"
 # List of hbase secondary masters.
diff -pruN hbase-1.4.9-alternate-ssh/bin/hbase-config.sh.orig hbase-1.4.9/bin/hbase-config.sh.orig
--- hbase-1.4.9-alternate-ssh/bin/hbase-config.sh.orig	1969-12-31 16:00:00.000000000 -0800
+++ hbase-1.4.9/bin/hbase-config.sh.orig	2019-01-24 17:56:51.831076000 -0800
@@ -0,0 +1,160 @@
+#
+#/**
+# * Licensed to the Apache Software Foundation (ASF) under one
+# * or more contributor license agreements.  See the NOTICE file
+# * distributed with this work for additional information
+# * regarding copyright ownership.  The ASF licenses this file
+# * to you under the Apache License, Version 2.0 (the
+# * "License"); you may not use this file except in compliance
+# * with the License.  You may obtain a copy of the License at
+# *
+# *     http://www.apache.org/licenses/LICENSE-2.0
+# *
+# * Unless required by applicable law or agreed to in writing, software
+# * distributed under the License is distributed on an "AS IS" BASIS,
+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# * See the License for the specific language governing permissions and
+# * limitations under the License.
+# */
+
+# included in all the hbase scripts with source command
+# should not be executable directly
+# also should not be passed any arguments, since we need original $*
+# Modelled after $HADOOP_HOME/bin/hadoop-env.sh.
+
+# resolve links - "${BASH_SOURCE-$0}" may be a softlink
+
+this="${BASH_SOURCE-$0}"
+while [ -h "$this" ]; do
+  ls=`ls -ld "$this"`
+  link=`expr "$ls" : '.*-> \(.*\)$'`
+  if expr "$link" : '.*/.*' > /dev/null; then
+    this="$link"
+  else
+    this=`dirname "$this"`/"$link"
+  fi
+done
+
+# convert relative path to absolute path
+bin=`dirname "$this"`
+script=`basename "$this"`
+bin=`cd "$bin">/dev/null; pwd`
+this="$bin/$script"
+
+# the root of the hbase installation
+if [ -z "$HBASE_HOME" ]; then
+  export HBASE_HOME=`dirname "$this"`/..
+fi
+
+#check to see if the conf dir or hbase home are given as an optional arguments
+while [ $# -gt 1 ]
+do
+  if [ "--config" = "$1" ]
+  then
+    shift
+    confdir=$1
+    shift
+    HBASE_CONF_DIR=$confdir
+  elif [ "--hosts" = "$1" ]
+  then
+    shift
+    hosts=$1
+    shift
+    HBASE_REGIONSERVERS=$hosts
+  elif [ "--auth-as-server" = "$1" ]
+  then
+    shift
+    # shellcheck disable=SC2034
+    AUTH_AS_SERVER="true"
+  elif [ "--autostart-window-size" = "$1" ]
+  then
+    shift
+    AUTOSTART_WINDOW_SIZE=$(( $1 + 0 ))
+    if [ $AUTOSTART_WINDOW_SIZE -lt 0 ]; then
+      echo "Invalid value for --autostart-window-size, should be a positive integer"
+      exit 1
+    fi
+    shift
+  elif [ "--autostart-window-retry-limit" = "$1" ]
+  then
+    shift
+    AUTOSTART_WINDOW_RETRY_LIMIT=$(( $1 + 0 ))
+    if [ $AUTOSTART_WINDOW_RETRY_LIMIT -lt 0 ]; then
+      echo "Invalid value for --autostart-window-retry-limit, should be a positive integer"
+      exit 1
+    fi
+    shift
+  else
+    # Presume we are at end of options and break
+    break
+  fi
+done
+ 
+# Allow alternate hbase conf dir location.
+HBASE_CONF_DIR="${HBASE_CONF_DIR:-$HBASE_HOME/conf}"
+# List of hbase regions servers.
+HBASE_REGIONSERVERS="${HBASE_REGIONSERVERS:-$HBASE_CONF_DIR/regionservers}"
+# List of hbase secondary masters.
+HBASE_BACKUP_MASTERS="${HBASE_BACKUP_MASTERS:-$HBASE_CONF_DIR/backup-masters}"
+if [ -n "$HBASE_JMX_BASE" ] && [ -z "$HBASE_JMX_OPTS" ]; then
+  HBASE_JMX_OPTS="$HBASE_JMX_BASE"
+fi
+# Thrift JMX opts
+if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_THRIFT_JMX_OPTS" ]; then
+  HBASE_THRIFT_JMX_OPTS="$HBASE_JMX_OPTS -Dcom.sun.management.jmxremote.port=10103"
+fi
+# Thrift opts
+if [ -z "$HBASE_THRIFT_OPTS" ]; then
+  export HBASE_THRIFT_OPTS="$HBASE_THRIFT_JMX_OPTS"
+fi
+
+# REST JMX opts
+if [ -n "$HBASE_JMX_OPTS" ] && [ -z "$HBASE_REST_JMX_OPTS" ]; then
+  HBASE_REST_JMX_OPTS="$HBASE_JMX_OPTS -Dcom.sun.management.jmxremote.port=10105"
+fi
+# REST opts
+if [ -z "$HBASE_REST_OPTS" ]; then
+  export HBASE_REST_OPTS="$HBASE_REST_JMX_OPTS"
+fi
+
+# Source the hbase-env.sh.  Will have JAVA_HOME defined.
+# HBASE-7817 - Source the hbase-env.sh only if it has not already been done. HBASE_ENV_INIT keeps track of it.
+if [ -z "$HBASE_ENV_INIT" ] && [ -f "${HBASE_CONF_DIR}/hbase-env.sh" ]; then
+  . "${HBASE_CONF_DIR}/hbase-env.sh"
+  export HBASE_ENV_INIT="true"
+fi
+
+# Verify if hbase has the mlock agent
+if [ "$HBASE_REGIONSERVER_MLOCK" = "true" ]; then
+  MLOCK_AGENT="$HBASE_HOME/lib/native/libmlockall_agent.so"
+  if [ ! -f "$MLOCK_AGENT" ]; then
+    cat 1>&2 <<EOF
+Unable to find mlockall_agent, hbase must be compiled with -Pnative
+EOF
+    exit 1
+  fi
+  if [ -z "$HBASE_REGIONSERVER_UID" ] || [ "$HBASE_REGIONSERVER_UID" == "$USER" ]; then
+      HBASE_REGIONSERVER_OPTS="$HBASE_REGIONSERVER_OPTS -agentpath:$MLOCK_AGENT"
+  else
+      HBASE_REGIONSERVER_OPTS="$HBASE_REGIONSERVER_OPTS -agentpath:$MLOCK_AGENT=user=$HBASE_REGIONSERVER_UID"
+  fi
+fi
+
+# Newer versions of glibc use an arena memory allocator that causes virtual
+# memory usage to explode. Tune the variable down to prevent vmem explosion.
+export MALLOC_ARENA_MAX=${MALLOC_ARENA_MAX:-4}
+
+# Now having JAVA_HOME defined is required 
+if [ -z "$JAVA_HOME" ]; then
+    cat 1>&2 <<EOF
++======================================================================+
+|                    Error: JAVA_HOME is not set                       |
++----------------------------------------------------------------------+
+| Please download the latest Sun JDK from the Sun Java web site        |
+|     > http://www.oracle.com/technetwork/java/javase/downloads        |
+|                                                                      |
+| HBase requires Java 1.7 or later.                                    |
++======================================================================+
+EOF
+    exit 1
+fi
diff -pruN hbase-1.4.9-alternate-ssh/bin/hbase-daemons.sh hbase-1.4.9/bin/hbase-daemons.sh
--- hbase-1.4.9-alternate-ssh/bin/hbase-daemons.sh	2018-12-05 10:53:31.000000000 -0800
+++ hbase-1.4.9/bin/hbase-daemons.sh	2019-01-24 17:56:51.836254000 -0800
@@ -40,6 +40,21 @@ AUTOSTART_WINDOW_RETRY_LIMIT=0
 
 . $bin/hbase-config.sh
 
+if [ "${HBASE_CONF_DIR}X" != "X" ] && [ "${orig_hbaseconfdir}X" != "X" ]
+then
+  export HBASE_CONF_DIR=$orig_hbaseconfdir
+fi
+
+if [ "${HBASE_LOG_DIR}X" != "X" ] && [ "${orig_hbaselogdir}X" != "X" ]
+then
+  export HBASE_LOG_DIR=$orig_hbaselogdir
+fi
+
+if [ "${HBASE_PID_DIR}X" != "X" ] && [ "${orig_hbasepiddir}X" != "X" ]
+then
+  export HBASE_PID_DIR=$orig_hbasepiddir
+fi
+
 if [[ "$1" = "autostart" || "$1" = "autorestart" ]]
 then
   autostart_args="--autostart-window-size ${AUTOSTART_WINDOW_SIZE} --autostart-window-retry-limit ${AUTOSTART_WINDOW_RETRY_LIMIT}"
diff -pruN hbase-1.4.9-alternate-ssh/bin/hbase-daemons.sh.orig hbase-1.4.9/bin/hbase-daemons.sh.orig
--- hbase-1.4.9-alternate-ssh/bin/hbase-daemons.sh.orig	1969-12-31 16:00:00.000000000 -0800
+++ hbase-1.4.9/bin/hbase-daemons.sh.orig	2019-01-24 17:56:51.841266000 -0800
@@ -0,0 +1,62 @@
+#!/usr/bin/env bash
+#
+#/**
+# * Licensed to the Apache Software Foundation (ASF) under one
+# * or more contributor license agreements.  See the NOTICE file
+# * distributed with this work for additional information
+# * regarding copyright ownership.  The ASF licenses this file
+# * to you under the Apache License, Version 2.0 (the
+# * "License"); you may not use this file except in compliance
+# * with the License.  You may obtain a copy of the License at
+# *
+# *     http://www.apache.org/licenses/LICENSE-2.0
+# *
+# * Unless required by applicable law or agreed to in writing, software
+# * distributed under the License is distributed on an "AS IS" BASIS,
+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# * See the License for the specific language governing permissions and
+# * limitations under the License.
+# */
+#
+# Run a hbase command on all slave hosts.
+# Modelled after $HADOOP_HOME/bin/hadoop-daemons.sh
+
+usage="Usage: hbase-daemons.sh [--config <hbase-confdir>] [--autostart-window-size <window size in hours>]\
+      [--autostart-window-retry-limit <retry count limit for autostart>] \
+      [--hosts regionserversfile] [autostart|autorestart|restart|start|stop] command args..."
+
+# if no args specified, show usage
+if [ $# -le 1 ]; then
+  echo $usage
+  exit 1
+fi
+
+bin=`dirname "${BASH_SOURCE-$0}"`
+bin=`cd "$bin">/dev/null; pwd`
+
+# default autostart args value indicating infinite window size and no retry limit
+AUTOSTART_WINDOW_SIZE=0
+AUTOSTART_WINDOW_RETRY_LIMIT=0
+
+. $bin/hbase-config.sh
+
+if [[ "$1" = "autostart" || "$1" = "autorestart" ]]
+then
+  autostart_args="--autostart-window-size ${AUTOSTART_WINDOW_SIZE} --autostart-window-retry-limit ${AUTOSTART_WINDOW_RETRY_LIMIT}"
+fi
+
+remote_cmd="$bin/hbase-daemon.sh --config ${HBASE_CONF_DIR} ${autostart_args} $@"
+args="--hosts ${HBASE_REGIONSERVERS} --config ${HBASE_CONF_DIR} $remote_cmd"
+
+command=$2
+case $command in
+  (zookeeper)
+    exec "$bin/zookeepers.sh" $args
+    ;;
+  (master-backup)
+    exec "$bin/master-backup.sh" $args
+    ;;
+  (*)
+    exec "$bin/regionservers.sh" $args
+    ;;
+esac
diff -pruN hbase-1.4.9-alternate-ssh/bin/start-hbase.sh hbase-1.4.9/bin/start-hbase.sh
--- hbase-1.4.9-alternate-ssh/bin/start-hbase.sh	2018-12-05 10:53:31.000000000 -0800
+++ hbase-1.4.9/bin/start-hbase.sh	2019-01-24 17:56:51.847239000 -0800
@@ -52,6 +52,21 @@ fi
 # HBASE-6504 - only take the first line of the output in case verbose gc is on
 distMode=`$bin/hbase --config "$HBASE_CONF_DIR" org.apache.hadoop.hbase.util.HBaseConfTool hbase.cluster.distributed | head -n 1`
 
+if [ "${HBASE_CONF_DIR}X" != "X" ] && [ "${orig_hbaseconfdir}X" != "X" ]
+then
+  export HBASE_CONF_DIR=$orig_hbaseconfdir
+fi
+
+if [ "${HBASE_LOG_DIR}X" != "X" ] && [ "${orig_hbaselogdir}X" != "X" ]
+then
+  export HBASE_LOG_DIR=$orig_hbaselogdir
+fi
+
+if [ "${HBASE_PID_DIR}X" != "X" ] && [ "${orig_hbasepiddir}X" != "X" ]
+then
+  export HBASE_PID_DIR=$orig_hbasepiddir
+fi
+
 if [ "$distMode" == 'false' ]
 then
   "$bin"/hbase-daemon.sh --config "${HBASE_CONF_DIR}" $commandToRun master
diff -pruN hbase-1.4.9-alternate-ssh/bin/start-hbase.sh.orig hbase-1.4.9/bin/start-hbase.sh.orig
--- hbase-1.4.9-alternate-ssh/bin/start-hbase.sh.orig	1969-12-31 16:00:00.000000000 -0800
+++ hbase-1.4.9/bin/start-hbase.sh.orig	2019-01-24 17:56:51.852235000 -0800
@@ -0,0 +1,65 @@
+#!/usr/bin/env bash
+#
+#/**
+# * Licensed to the Apache Software Foundation (ASF) under one
+# * or more contributor license agreements.  See the NOTICE file
+# * distributed with this work for additional information
+# * regarding copyright ownership.  The ASF licenses this file
+# * to you under the Apache License, Version 2.0 (the
+# * "License"); you may not use this file except in compliance
+# * with the License.  You may obtain a copy of the License at
+# *
+# *     http://www.apache.org/licenses/LICENSE-2.0
+# *
+# * Unless required by applicable law or agreed to in writing, software
+# * distributed under the License is distributed on an "AS IS" BASIS,
+# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# * See the License for the specific language governing permissions and
+# * limitations under the License.
+# */
+
+# Modelled after $HADOOP_HOME/bin/start-hbase.sh.
+
+# Start hadoop hbase daemons.
+# Run this on master node.
+usage="Usage: start-hbase.sh [--autostart-window-size <window size in hours>]\
+      [--autostart-window-retry-limit <retry count limit for autostart>]\
+      [autostart|start]"
+
+bin=`dirname "${BASH_SOURCE-$0}"`
+bin=`cd "$bin">/dev/null; pwd`
+
+# default autostart args value indicating infinite window size and no retry limit
+AUTOSTART_WINDOW_SIZE=0
+AUTOSTART_WINDOW_RETRY_LIMIT=0
+
+. "$bin"/hbase-config.sh
+
+# start hbase daemons
+errCode=$?
+if [ $errCode -ne 0 ]
+then
+  exit $errCode
+fi
+
+if [ "$1" = "autostart" ]
+then
+  commandToRun="--autostart-window-size ${AUTOSTART_WINDOW_SIZE} --autostart-window-retry-limit ${AUTOSTART_WINDOW_RETRY_LIMIT} autostart"
+else
+  commandToRun="start"
+fi
+
+# HBASE-6504 - only take the first line of the output in case verbose gc is on
+distMode=`$bin/hbase --config "$HBASE_CONF_DIR" org.apache.hadoop.hbase.util.HBaseConfTool hbase.cluster.distributed | head -n 1`
+
+if [ "$distMode" == 'false' ]
+then
+  "$bin"/hbase-daemon.sh --config "${HBASE_CONF_DIR}" $commandToRun master
+else
+  "$bin"/hbase-daemons.sh --config "${HBASE_CONF_DIR}" $commandToRun zookeeper
+  "$bin"/hbase-daemon.sh --config "${HBASE_CONF_DIR}" $commandToRun master
+  "$bin"/hbase-daemons.sh --config "${HBASE_CONF_DIR}" \
+    --hosts "${HBASE_REGIONSERVERS}" $commandToRun regionserver
+  "$bin"/hbase-daemons.sh --config "${HBASE_CONF_DIR}" \
+    --hosts "${HBASE_BACKUP_MASTERS}" $commandToRun master-backup
+fi
diff -pruN hbase-1.4.9-alternate-ssh/bin/stop-hbase.sh hbase-1.4.9/bin/stop-hbase.sh
--- hbase-1.4.9-alternate-ssh/bin/stop-hbase.sh	2018-12-05 10:53:40.000000000 -0800
+++ hbase-1.4.9/bin/stop-hbase.sh	2019-01-24 17:56:51.857252000 -0800
@@ -59,6 +59,22 @@ rm -f $pid
 # distributed == false means that the HMaster will kill ZK when it exits
 # HBASE-6504 - only take the first line of the output in case verbose gc is on
 distMode=`$bin/hbase --config "$HBASE_CONF_DIR" org.apache.hadoop.hbase.util.HBaseConfTool hbase.cluster.distributed | head -n 1`
+
+if [ "${HBASE_CONF_DIR}X" != "X" ] && [ "${orig_hbaseconfdir}X" != "X" ]
+then
+  export HBASE_CONF_DIR=$orig_hbaseconfdir
+fi
+
+if [ "${HBASE_LOG_DIR}X" != "X" ] && [ "${orig_hbaselogdir}X" != "X" ]
+then
+  export HBASE_LOG_DIR=$orig_hbaselogdir
+fi
+
+if [ "${HBASE_PID_DIR}X" != "X" ] && [ "${orig_hbasepiddir}X" != "X" ]
+then
+  export HBASE_PID_DIR=$orig_hbasepiddir
+fi
+
 if [ "$distMode" == 'true' ] 
 then
   "$bin"/hbase-daemons.sh --config "${HBASE_CONF_DIR}" stop zookeeper
